!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";n.r(t);n(0);var r=document.querySelector(".profile__edit-button"),o=document.querySelector(".profile__avatar-edit-button"),i=document.querySelector(".profile__name"),u=document.querySelector(".profile__job"),c=document.querySelector(".profile__avatar"),a=document.querySelector(".profile__add-button"),l=document.querySelector(".gallery"),s=document.querySelector(".popup_type_view"),f=document.querySelector(".popup_type_edit"),p=document.querySelector(".popup_type_add"),h=document.querySelector(".popup__forms_type_edit"),_=document.querySelector(".popup__forms_type_add"),y=document.querySelector(".popup__forms_type_avatar"),d=document.querySelector(".popup_type_avatar"),m=document.querySelector(".popup_type_delete"),v={formSelector:".popup__forms",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n,r,o,i,u,c,a,l,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._image=n,this._title=r,this._templateSelector=o,this._handleCardClick=i,this._deleteCardClick=u,this._likes=a,this._id=t,this._isOwn=l,this._likeCardClick=c,this._hasBeenLiked=s}var t,n,r;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".gallery__card").cloneNode(!0)}},{key:"generateTemplate",value:function(){this._element=this._getTemplate(),this._setEventListeners(),this._imageElement=this._element.querySelector(".gallery__photo"),this._likesNumber=this._element.querySelector(".gallery__like-number"),this._element.querySelector(".gallery__trash-button").style.display=this._isOwn?"block":"none",this._imageElement.src=this._image,this._imageElement.alt=this._title,this._element.querySelector(".gallery__photo-title").textContent=this._title,this._likesNumber.textContent=this._likes.length;var e=this._element.querySelector(".gallery__like-button");return this._hasBeenLiked&&e.classList.add("gallery__like-button_active"),this._element}},{key:"handleLikeButton",value:function(){this._element.querySelector(".gallery__like-button").classList.toggle("gallery__like-button_active")}},{key:"_likeButtonClick",value:function(){this._likeCardClick(this)}},{key:"setLikes",value:function(e){this._likes=e,this._likesNumber.textContent=this._likes.length}},{key:"trashSubmit",value:function(){this._element.remove(),this._element=null}},{key:"_handlePopupViewOpen",value:function(){this._handleCardClick()}},{key:"_handlePopupDeleteOpen",value:function(){this._deleteCardClick(this)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".gallery__like-button").addEventListener("click",this._likeButtonClick.bind(this)),this._element.querySelector(".gallery__trash-button").addEventListener("click",this._handlePopupDeleteOpen.bind(this)),this._element.querySelector(".gallery__photo").addEventListener("click",(function(){e._handlePopupViewOpen()}))}}])&&b(t.prototype,n),r&&b(t,r),e}();function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=n}var t,n,r;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e.addItem(t)}))}},{key:"addItem",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this._renderer(e);t?this._container.append(n):this._container.prepend(n)}}])&&S(t.prototype,n),r&&S(t,r),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._submitButton=this._popupSelector.querySelector(".popup__submit-button"),this.setEventListeners(),this._handleEscClose=this._handleEscClose.bind(this)}var t,n,r;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_opened"),document.activeElement.blur(),this._setEscListener()}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_setEscListener",value:function(){document.addEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){null!==document.querySelector(".popup_opened")&&"Escape"===e.code&&this.close()}},{key:"_handleOverlayClose",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup__close-button").addEventListener("click",(function(t){e.close(t)})),this._popupSelector.addEventListener("click",(function(t){e._handleOverlayClose(t)}))}},{key:"setLoading",value:function(){this._submitButton.textContent="Сохранение...",this._submitButton.disabled=!0}},{key:"setDefaultButton",value:function(e){this._submitButton.disabled=!1,this._submitButton.textContent=e}}])&&E(t.prototype,n),r&&E(t,r),e}();function O(e){return(O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(e,t,n){return(j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function L(e,t){return(L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=q(e);if(t){var o=q(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return I(this,n)}}function I(e,t){return!t||"object"!==O(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(i,e);var t,n,r,o=P(i);function i(e,t,n,r,u){var c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(c=o.call(this,e))._formSubmitPromise=t,c._formSubmitCallback=n,c._popupValidator=r,c._title=u,c}return t=i,(n=[{key:"_getInputValues",value:function(){var e={};return Array.from(this._popupSelector.querySelectorAll(".popup__input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;j(q(i.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e.setLoading(),e._formSubmitPromise(e._getInputValues()).then((function(t){e.setDefaultButton(e._title),e._formSubmitCallback(t)})).catch((function(e){console.log(e)})),e.close()}))}},{key:"open",value:function(e,t){for(var n in e)null!==this._popupSelector.querySelector(".popup__input[name=".concat(t,"-").concat(n,"]"))&&(this._popupSelector.querySelector(".popup__input[name=".concat(t,"-").concat(n,"]")).value=e[n]);j(q(i.prototype),"open",this).call(this),this._popupValidator.enableValidation(),this._popupValidator.toggleButtonState(!0)}},{key:"close",value:function(){Array.from(this._popupSelector.querySelectorAll(".popup__input")).forEach((function(e){e.value=""})),j(q(i.prototype),"close",this).call(this),this._popupValidator.resetError()}}])&&C(t.prototype,n),r&&C(t,r),i}(w);function T(e){return(T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(e,t,n){return(x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function D(e,t){return(D=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function A(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=V(e);if(t){var o=V(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return U(this,n)}}function U(e,t){return!t||"object"!==T(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function V(e){return(V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&D(e,t)}(i,e);var t,n,r,o=A(i);function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),o.call(this,e)}return t=i,(n=[{key:"open",value:function(e,t){this._popupSelector.querySelector(".popup__photo").src=t,this._popupSelector.querySelector(".popup__photo-caption").textContent=e,x(V(i.prototype),"open",this).call(this)}}])&&R(t.prototype,n),r&&R(t,r),i}(w);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=t,this._jobSelector=n,this._avatarSelector=r}var t,n,r;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,job:this._jobSelector.textContent,id:this._id}}},{key:"setUserInfo",value:function(e){this._nameSelector.textContent=e.name,this._jobSelector.textContent=e.about,this._avatarSelector.style.backgroundImage="url(".concat(e.avatar,")"),this._id=e._id}}])&&N(t.prototype,n),r&&N(t,r),e}();function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var H=function(){function e(t,n,r){var o=r.formSelector,i=r.inputSelector,u=r.submitButtonSelector,c=r.inactiveButtonClass,a=r.inputErrorClass,l=r.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=o,this._inputSelector=i,this._submitButtonSelector=u,this._inactiveButtonClass=c,this._inputErrorClass=a,this._errorClass=l,this._formElement=t,this._inputElements=this._formElement.querySelectorAll(this._inputSelector),this._popup=n}var t,n,r;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error")),n=e.validationMessage;e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass),t.textContent=n}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(){var e=this;this._inputElements.forEach((function(t){t.validity.valid?e._hideInputError(t):e._showInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(this._hasInvalidInput()),this._inputElements.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(),e.toggleButtonState(e._hasInvalidInput())}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputElements).some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(e){var t=this._formElement.querySelector(this._submitButtonSelector);if(e){if(null===t)return;t.classList.add(this._inactiveButtonClass),t.setAttribute("disabled",!0)}else t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled",!0)}},{key:"resetError",value:function(){if(!this._popup.classList.contains("popup_opened")){var e=this._popup.querySelectorAll(".popup__input-error_active"),t=this._popup.querySelectorAll(".popup__input_type_error");if(null===e&&null===t)return;e.forEach((function(e){e.classList.remove("popup__input-error_active")})),t.forEach((function(e){e.classList.remove("popup__input_type_error")}))}}}])&&J(t.prototype,n),r&&J(t,r),e}();function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(t){var n=t.url,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=n,this._headers=r}var t,n,r;return t=e,(n=[{key:"getItems",value:function(){return fetch(this._url,{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"createItem",value:function(e){return fetch(this._url,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"changeItem",value:function(e){return fetch(this._url,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deleteItem",value:function(e){return fetch("".concat(this._url).concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"putItem",value:function(e){return fetch("".concat(this._url).concat(e._id),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}}])&&$(t.prototype,n),r&&$(t,r),e}();function G(e){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Q(e,t,n){return(Q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Z(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function W(e,t){return(W=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function X(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Z(e);if(t){var o=Z(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Y(this,n)}}function Y(e,t){return!t||"object"!==G(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Z(e){return(Z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var ee=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&W(e,t)}(i,e);var t,n,r,o=X(i);function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),o.call(this,e)}return t=i,(n=[{key:"setSubmitAction",value:function(e){this._formSubmitCallback=e}},{key:"setEventListeners",value:function(){var e=this;Q(Z(i.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmitCallback(),e.close()}))}},{key:"setDefaultButton",value:function(){Q(Z(i.prototype),"setDefaultButton",this).call(this),this._submitButton=this._popupSelector.querySelector(".popup__submit-button"),this._submitButton.textContent="Да"}}])&&K(t.prototype,n),r&&K(t,r),i}(w);function te(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var u,c=e[Symbol.iterator]();!(r=(u=c.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return ne(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ne(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ne(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var re=new z(i,u,c),oe=new F({url:"https://mesto.nomoreparties.co/v1/cohort-14/users/me",headers:{authorization:"3264da94-6a0d-46bd-9eaf-c8758f7396fd","Content-Type":"application/json"}}),ie=new F({url:"https://mesto.nomoreparties.co/v1/cohort-14/users/me/avatar",headers:{authorization:"3264da94-6a0d-46bd-9eaf-c8758f7396fd","Content-Type":"application/json"}}),ue=new F({url:"https://mesto.nomoreparties.co/v1/cohort-14/cards",headers:{authorization:"3264da94-6a0d-46bd-9eaf-c8758f7396fd","Content-Type":"application/json"}}),ce=new F({url:"https://mesto.nomoreparties.co/v1/cohort-14/cards/",headers:{authorization:"3264da94-6a0d-46bd-9eaf-c8758f7396fd","Content-Type":"application/json"}}),ae=new F({url:"https://mesto.nomoreparties.co/v1/cohort-14/cards/likes/",headers:{authorization:"3264da94-6a0d-46bd-9eaf-c8758f7396fd","Content-Type":"application/json"}});Promise.all([oe.getItems(),ue.getItems()]).then((function(e){var t=te(e,2),n=t[0],r=t[1];re.setUserInfo(n),r.forEach((function(e){he.addItem({_id:e._id,link:e.link,name:e.name,likes:e.likes,isOwn:e.owner._id===n._id,hasBeenLiked:e.likes.some((function(e){return e._id==re.getUserInfo().id}))},!0)}))})).catch((function(e){console.log(e)}));var le=new H(h,f,v),se=new H(_,p,v),fe=new H(y,d,v),pe=new ee(m),he=new g({items:[],renderer:function(e){return new k(e._id,e.link,e.name,".card-template",(function(){new M(s).open(e.name,e.link)}),(function(e){pe.setSubmitAction((function(){pe.setLoading(),ce.deleteItem(e._id).then((function(t){e.trashSubmit(),pe.setDefaultButton()})).catch((function(e){console.log(e)}))})),pe.open()}),(function(e){e._likes.some((function(e){return e._id==re.getUserInfo().id}))?ae.deleteItem(e._id).then((function(t){e.setLikes(t.likes),e.handleLikeButton()})).catch((function(e){console.log(e)})):ae.putItem(e).then((function(t){e.setLikes(t.likes),e.handleLikeButton()})).catch((function(e){console.log(e)}))}),e.likes,e.isOwn,e.hasBeenLiked).generateTemplate()}},l),_e=new B(f,(function(e){var t={name:e["user-name"],about:e["user-job"]};return oe.changeItem(t)}),(function(e){re.setUserInfo(e)}),le,"Сохранить"),ye=new B(p,(function(e){var t={name:e["place-name"],link:e["place-url"]};return ue.createItem(t)}),(function(e){he.addItem({_id:e._id,name:e.name,link:e.link,likes:e.likes,isOwn:e.owner._id===re.getUserInfo().id,hasBeenLiked:e.likes.some((function(e){return e._id==re.getUserInfo().id}))})}),se,"Создать"),de=new B(d,(function(e){var t={avatar:e["user-avatar"]};return ie.changeItem(t)}),(function(e){re.setUserInfo(e)}),fe,"Сохранить");r.addEventListener("click",(function(){_e.open(re.getUserInfo(),"user")})),a.addEventListener("click",(function(){ye.open()})),o.addEventListener("click",(function(){de.open()}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,